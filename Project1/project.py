import numpy as np
from sys import getsizeof
from search import *
import copy
import matplotlib.pyplot as plt
import time
import math
import random
from walls import *

def getRandomTile(maze):
  """
  Receives a maze and returns a random valid position of the maze.
  """
  height = len(maze)
  width = len(maze[0])
  valid = False
  while not valid:
    x = random.choice(np.arange(width))
    y = random.choice(np.arange(height))
    if maze[y][x] == '.':
      valid = True
  return x,y

def setGame(maze):
  """
  Receives a maze and place three ghosts (A, B, C), the initial position (P),
  and the goal position (G) in valid positions. Returns the initial and goal
  position.
  """
  #Set ghosts positions (ABC)
  x,y = getRandomTile(maze)
  maze[y][x] = 'A'
  x,y = getRandomTile(maze)
  maze[y][x] = 'B'
  x,y = getRandomTile(maze)
  maze[y][x] = 'C'
  #Set pacman position (P)
  x,y = getRandomTile(maze)
  maze[y][x] = 'P'
  initial = (x,y)
  #Set goal position (G)
  x,y = getRandomTile(maze)
  maze[y][x] = 'G'
  goal = (x,y)
  return initial, goal

 #Example of a maze

maze = [['|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|'], ['|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '.', '.', '.', '.', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '.', '.', '.', '.', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '.', '|', '|', '|', '.', '.', '|', '|', '.', '.', '.', '.', '.', '.', '|', '|', '.', '.', '|', '|', '|', '.', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '.', '|', '|', '|', '|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|', '|', '|', '|', '.', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|', '|', '.', '.', '.', '.', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '|', '|', 'G', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', 'B', '.', 'P', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '.', '.', '.', '|', '|', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '.', '|', '|', '.', '|', '|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|', '|', '.', '|', '|', '.', '|', '|', '.', '|'], ['|', '.', '|', '|', '.', '|', '|', '.', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '.', '|', '|', '.', '|', '|', '.', '|'], ['|', '.', '|', '|', '.', '|', '|', '.', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '.', '|', '|', '.', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '.', '.', '.', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '|', '|', '.', '.', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '.', '.', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '.', '.', '.', '.', '.', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '.', '.', '.', '.', '.', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '|', '.', '.', '|', '|', '|', 'C', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', 'A', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '.', '.', '.', '.', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '|', '.', '.', '.', '.', '|', '|', '|', '|', '|', '|', '.', '|', '|', '|', '|', '|', '.', '|'], ['|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'], ['|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|']]

def bfs():
    problem = mazeProblem((29,7), (7,7), maze)
    solution = breadth_first_tree_search(problem)
    printResult(problem, solution)
    
def dfs():
    problem = mazeProblem((29,7), (7,7), maze)
    solution = depth_first_tree_search(problem)
    printResult(problem, solution)
    
def greedy():
    problem = mazeProblem((29,7), (7,7), maze)
    solution = greedy_bestfirst_tree_search(problem, heuristic='e')
    printResult(problem, solution)
    
def astar():
    problem = mazeProblem((29,7), (7,7), maze)
    solution = a_star_search(problem)
    printResult(problem, solution)

def ehc():
    problem = mazeProblem((29,7), (7,7), maze)
    solution = enforced_hill_climbing(problem)
    printResult(problem, solution)
